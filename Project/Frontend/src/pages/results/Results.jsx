import React from 'react';
import { useLocation, Link } from 'react-router-dom';
import {Camera, Download, AlertTriangle, XCircle, EyeOff } from 'lucide-react';
import EyeResultCard from './EyeResultCard';
import { exportToPDF } from './ReportExporter';
import { generateRecommendations } from '../../utils/generateRecommendations';

const Results = () => {
    const location = useLocation();
    const results = location.state?.results;
    const error = location.state?.error;
    const processedResults = location.state?.processedResults;
    const imageBase64 = location.state?.previewImageBase64;

       if (error) {
        return (
            <div className="min-h-screen bg-gray-50 flex items-center justify-center px-4">
                <div className="bg-white shadow rounded-lg p-8 w-full max-w-lg text-center">
                    <XCircle className="text-red-500 w-16 h-16 mx-auto mb-4"/>
                    <h2 className="text-2xl font-bold text-red-600 mb-2">An Error Occurred</h2>
                    <p className="text-gray-700 mb-4">{error}</p>
                    <Link to="/scan" className="btn btn-primary inline-flex items-center">
                        <Camera className="mr-2"/> Try Again
                    </Link>
                </div>
            </div>
        );
       }

    if (!results) {
        return (
            <div className="min-h-screen bg-gray-50 flex items-center justify-center px-4">
                <div className="bg-white shadow rounded-lg p-8 w-full max-w-lg text-center">
                    <EyeOff className="text-gray-500 w-16 h-16 mx-auto mb-4"/>
                    <h2 className="text-2xl font-bold text-gray-700 mb-2">No Results</h2>
                    <p className="text-gray-600 mb-4">We couldnâ€™t find any results from your scan.</p>
                    <Link to="/scan" className="btn btn-primary inline-flex items-center">
                        <Camera className="mr-2"/> Take a Scan
                    </Link>
                </div>
            </div>
        );
    }
    const parsedResults = JSON.parse(results.body);
    const eyes = [];

    if(processedResults){
        const {left_eye, right_eye} = parsedResults;

        if (left_eye.best_prediction !== 'Not Detected') eyes.push({side: 'Left Eye', data: left_eye});
        if (right_eye.best_prediction !== 'Not Detected') eyes.push({side: 'Right Eye', data: right_eye});

        if (!eyes.length) {
            return <p>No eyes found in the images, sorry.</p>;
        }
    }
    else{
        const { eye_image } = parsedResults;

        // Find the best prediction
        const bestPrediction = Object.entries(eye_image).reduce(
            (best, [key, value]) => (value > best.value ? { key, value } : best),
            { key: '', value: 0 }
        );

        eyes.push({
            side: 'Eye Image',
            data: {
                best_prediction: bestPrediction.key,
                average_scores: eye_image
            }
        });
    }

    return (
        <div className="min-h-screen bg-gray-50 py-12">
            <div className="max-w-4xl mx-auto">
            <h1 className="text-4xl font-bold text-center mb-4">Analysis Results</h1>
                <p className="text-center mb-8">Here are the results from your eye health scan</p>

                {imageBase64 && (
                    <div className="text-center mb-8">
                        <img src={imageBase64} alt="Uploaded" className="w-64 mx-auto rounded-lg shadow" />
                    </div>
                )}

                {eyes.map((eye) => (
                    <EyeResultCard key={eye.side} {...eye} generateRecommendations={generateRecommendations} />
                ))}

                <div className="flex justify-center gap-4 mt-6">
                    <Link to="/scan" className="btn btn-primary">
                        <Camera className="mr-2" /> Take Another Scan
                    </Link>
                    <button onClick={() => exportToPDF({ eyes, imageBase64 })} className="btn btn-outline-primary">
                        <Download className="mr-2" /> Download Results
                    </button>
                </div>

                <div className="bg-yellow-50 border rounded-lg p-6 mt-6 flex">
                    <AlertTriangle className="text-yellow-600 mr-3" />
                    <p className="text-yellow-800">
                        These results are generated by AI and are for informational purposes only.
                        Please consult a qualified professional for medical evaluation.
                    </p>
                </div>
            </div>
        </div>
    );
};

export default Results;